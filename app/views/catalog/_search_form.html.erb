<% lang = params[:locale] ? params[:locale] : "da" %>

<div class="row ">
  <div class="container">
    <div class="col-sm-12 text-center">
      <div class="form-inline">
        <%= form_tag search_action_url_local, method: :get, class: 'search-query-form clearfix navbar-form col-xs-12', role: 'search' do %>
            <%= render_hash_as_hidden_fields(search_state.params_for_search.except(:q, :search_field, :qt, :page, :utf8,
                                                                                   :medium, :collection, :year, :month, :edition, :subj_id, :notBefore, :notAfter)) %>
            <span class="group">
              <% if search_fields.length > 1 %>
                <div class="form-group">

                  <%= select_tag(:search_field, options_for_select(search_fields, h(params[:search_field])), title: t('blacklight.search.form.search_field.title'), id: "search_field", class: "form-control") %>
                </div>
            <% elsif search_fields.length == 1 %>
                <%= hidden_field_tag :search_field, search_fields.first.last %>
            <% end %>

              <div class=" search-box form-group">
              <label for="q" class="sr-only"><%= t('blacklight.search.form.search.label') %></label>
                <%= text_field_tag :q, params[:q], placeholder: t('blacklight.search.form.search.placeholder'),
                                   :class => "search_q q form-control", :id => "q", :autofocus => should_autofocus_on_search_box? %>
            </div>
              </span>
            <span class="group">
            <div class=" left-inner-addon form-group">
              <i class="glyphicon glyphicon-calendar"></i>
              <input type="text" class="form-control" id="datepicker1" placeholder="<%= t('blacklight.search.not_before') %> yyyy-mm-dd" <%= text_field_tag :notBefore, params[:notBefore] %>
              <a id="datepicker1_remove" class="btn btn-default btn-sm remove dropdown-toggle" href=""><span class="glyphicon glyphicon-remove"></span></a>

            </div>
            <div class=" left-inner-addon form-group">
              <i class="glyphicon glyphicon-calendar"></i>
              <input type="text" class="form-control" id="datepicker2" placeholder="<%= t('blacklight.search.not_after') %> yyyy-mm-dd" <%= text_field_tag :notAfter, params[:notAfter] %>
              <a id="datepicker2_remove" class="btn btn-default btn-sm remove dropdown-toggle" href=""><span class="glyphicon glyphicon-remove"></span></a>
            </div>
</span>
            <button type="submit" class="btn btn-primary search-btn" id="search">
              <span class="submit-search-text"><%= t('blacklight.search.form.submit') %></span>
              <span class="glyphicon glyphicon-search"></span>
            </button>
            </div>

        <% end %>
        </div>
  </div>
</div>
</div>
<script>
    $(function () {
        var dateFormat = 'yy-mm-dd';

        var from = $("#datepicker1")
            .datepicker({
                dateFormat: dateFormat,
                defaultDate: "+1w",
                changeMonth: true,
                changeYear: true,
                yearRange: "1000:-nn",
                numberOfMonths: 1,
                firstDay: 1,
                onChangeMonthYear: function (year, month, datePicker) {
                    getNewDate(year, month, from);
                    $("#datepicker1_remove").show();
                }
            })
            .on("change", function () {
                to.datepicker("option", "minDate", getDate(this));
                $("#datepicker1_remove").show();
            });

        var to = $("#datepicker2")
            .datepicker({
                dateFormat: dateFormat,
                defaultDate: "+1w",
                changeMonth: true,
                changeYear: true,
                yearRange: "1000:-nn",
                numberOfMonths: 1,
                firstDay: 1,
                onChangeMonthYear: function (year, month, datePicker) {
                    getNewDate(year, month, to);
                    $("#datepicker2_remove").show();
                }
            })
            .on("change", function () {
                from.datepicker("option", "maxDate", getDate(this));
                $("#datepicker2_remove").show();
            });


        $("#datepicker1_remove").on('click', function(){
            from.datepicker('setDate', null);
            $("#datepicker1_remove").hide();
        });

        $("#datepicker2_remove").on('click', function(){
            to.datepicker('setDate', null);
            $("#datepicker2_remove").hide();
        });

        function getDate(element) {
            var date;
            try {
                date = $.datepicker.parseDate(dateFormat, element.value);
            } catch (error) {
                date = null;
            }
            return date;
        }

        function getNewDate(year, month, picker){
            var daysInMonth = new Date(year, month, 0).getDate();
            var oldDate = picker.datepicker('getDate');
            if (oldDate != null){
                var oldDay = oldDate.getDate();
                if (oldDay > daysInMonth)
                    oldDay = daysInMonth;
                var newDate = new Date(year, month - 1, oldDay, 0, 0, 0);
            }else{
                var newDate = new Date(year, month - 1, 1, 0, 0, 0);
            }

            picker.datepicker('setDate', newDate);
        }
    });
</script>